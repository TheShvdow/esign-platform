version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      target: builder
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    env_file:
      - apps/backend/.env.development
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/apps/backend/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - esign-network
    command: npm run start:dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: esign_development
      POSTGRES_USER: esign_user
      POSTGRES_PASSWORD: secure_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - esign-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - esign-network
    command: redis-server --appendonly yes

  # Adminer (DB Admin)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - esign-network

  # Future Frontend (préparé)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - esign-network
    profiles:
      - frontend # Activé seulement avec --profile frontend

volumes:
  postgres_data:
  redis_data:

networks:
  esign-network:
    driver: bridge